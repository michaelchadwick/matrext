#!/usr/bin/env ruby

require 'optparse'

require_relative '../lib/matrext'
require_relative '../lib/matrext/version'

def parse_options
  options = {:oneline => false, :speed => nil}

  optparse = OptionParser.new do |opts|
    opts.banner = 'usage: matrext "phrase" [-o] [-s insane|fast|slow]'

    opts.on('-s', '--speed SPEED', 'Speed at which the text decodes') do |speed|
      options[:speed] = speed
    end
    
    opts.on('-o', '--oneline', 'Display text on one line, along with anything before or after') do
      options[:oneline] = true
    end
    
    opts.on('-v', '--version', 'Display version number and exit') do
      puts "#{$PROGRAM_NAME} #{Matrext::VERSION}"
      exit
    end

    opts.on('-h', '--help', 'Display this screen and exit') do
      puts opts
      exit
    end
  end

  optparse.parse!()

  return options
end

def print_error(error)
  case error
  when OptionParser::InvalidOption
    puts "#{$PROGRAM_NAME}: illegal option #{error.args.join(' ')}"
  else
    puts "An unexpected error occurred while running #{$PROGRAM_NAME}:"
    puts "  #{error}\n"
  end
end

begin
  options = parse_options

  if (ARGV.count > 0)
    options[:phrase] = ARGV[0]
    Matrext::Base.new(options)
  else
    puts "#{$PROGRAM_NAME} error: missing phrase"
  end
rescue => error
  print_error(error)
  exit(false)
end
